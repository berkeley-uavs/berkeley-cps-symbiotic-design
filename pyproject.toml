[build-system]
requires = ["pdm-pep517>=0.12.0"]
build-backend = "pdm.pep517.api"

[project]
name = "sym-cps"
description = "Develop AI-based approaches to enable correct-by-construction design of Cyber Physical Systems"
authors = [{name = "LOGiCS Team UC Berkeley", email = "mallozzi@berkeley.edu"}]
readme = "README.md"
keywords = []
dynamic = ["version"]
dependencies = [
    "editables>=0.3",
    "eval-pipeline @ file:///${PROJECT_ROOT}/eval_pipeline",
    "dill>=0.3.5.1",
    "flask>=2.2.2",
    "flask-socketio>=5.3.1",
    "eventlet>=0.33.1",
    "scikit-learn>=1.1.2",
    "bayesian-optimization @ git+https://github.com/fmfn/BayesianOptimization",
    "pydot>=1.4.2",
    "matplotlib>=3.6.1",
    "scipy>=1.9.3",
    "graphviz>=0.20.1",
    "gprof2dot>=2022.7.29",
    "dynaconf>=3.1.11",
    "parse>=1.19.0",
    "astropy>=5.1",
    "pandas>=1.5.0",
    "z3-solver>=4.11.2.0",
    "igraph>=0.10.2",
    "numpy>=1.23.4",
    "tabulate>=0.9.0",
    "networkx>=2.8.8",
    "sympy>=1.11.1",
]
requires-python = ">=3.10,<3.11"

[project.scripts]
init = "sym_cps.cli:update_all"
export-designs = "sym_cps.cli:export_designs"
custom-design = "sym_cps.cli:load_custom_design"
evaluate = "sym_cps.cli:evaluate_abstract_design"
evaluate_design_swri = "sym_cps.cli:evaluate_design_swri"
isomorphisms = "sym_cps.representation.design.concrete.structures:random_sampling_for_n"
generate_random = "sym_cps.cli:generate_random"

[tool.pdm]
version = {source = "scm"}
package-dir = "src"


[tool.pdm.build]
package-dir = "src"
editable-backend = "editables"

[tool.pdm.dev-dependencies]
duty = ["duty>=0.7"]
docs = [
    "mkdocs>=1.3",
    "mkdocs-coverage>=0.2",
    "mkdocs-gen-files>=0.3",
    "mkdocs-literate-nav>=0.4",
    "mkdocs-material>=7.3",
    "mkdocs-section-index>=0.3",
    "mkdocstrings[python]>=0.18",
    "markdown-callouts>=0.2",
    "markdown-exec>=0.5",
    "toml>=0.10",
]
format = [
    "autoflake>=1.4",
    "black>=21.10b0",
    "isort>=5.10",
]
maintain = [
    "git-changelog>=0.4",
]
quality = [
    "darglint>=1.8",
#    "flake8<4",  # TODO: remove once importlib-metadata version conflict is resolved
#    "flake8-bandit>=2.1",
#    "flake8-black>=0.2",
#    "flake8-bugbear>=21.9",
#    "flake8-builtins>=1.5",
#    "flake8-comprehensions>=3.7",
#    "flake8-docstrings>=1.6",
#    "flake8-pytest-style>=1.5",
#    "flake8-string-format>=0.3",
#    "flake8-tidy-imports>=4.5",
#    "flake8-variables-names>=0.0",
#    "pep8-naming>=0.12",
#    "wps-light>=0.15",
]
tests = [
    "pytest>=6.2",
    "pytest-cov>=3.0",
    "pytest-randomly>=3.10",
    "pytest-xdist>=2.4",
]
typing = [
    "mypy>=0.910",
    "types-markdown>=3.3",
    "types-toml>=0.10",
]
security = ["safety>=2"]

[tool.black]
line-length = 120
exclude = "tests/fixtures"

[tool.isort]
line_length = 120
not_skip = "__init__.py"
multi_line_output = 3
force_single_line = false
balanced_wrapping = true
default_section = "THIRDPARTY"
known_first_party = "sym_cps"
include_trailing_comma = true
